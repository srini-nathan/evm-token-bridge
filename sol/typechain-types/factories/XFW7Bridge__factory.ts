/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XFW7Bridge, XFW7BridgeInterface } from "../XFW7Bridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "ClaimTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "DepositTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "ReturnTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "mainDepositHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "TokensBridged",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "bridget",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
    ],
    name: "gatewayUpdate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "returnTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_requester",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_mainDepositHash",
        type: "bytes32",
      },
    ],
    name: "tokensBridged",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610bf4380380610bf483398101604081905261002f916100da565b818161003a3361006e565b600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790555061010c9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d557600080fd5b919050565b600080604083850312156100ec578182fd5b6100f5836100be565b9150610103602084016100be565b90509250929050565b610ad98061011b6000396000f3fe6080604052600436106100a05760003560e01c8063715018a611610064578063715018a6146102165780638da5cb5b1461022b578063dd49756e14610249578063f2fde38b14610269578063f9718fc814610289578063fc0c546a1461029e576100eb565b80630a0f4def1461012c578063116191b61461014e578063147e78b41461018b578063387129e9146101bb57806348c54b9d14610201576100eb565b366100eb5760405162461bcd60e51b81526020600482015260166024820152752237b713ba1030b1b1b2b83a1030b73c9022ba3432b960511b60448201526064015b60405180910390fd5b60405162461bcd60e51b81526020600482015260166024820152752237b713ba1030b1b1b2b83a1030b73c9022ba3432b960511b60448201526064016100e2565b34801561013857600080fd5b5061014c6101473660046108bf565b6102be565b005b34801561015a57600080fd5b5060025461016e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019757600080fd5b506101ab6101a63660046108e0565b610358565b6040519015158152602001610182565b3480156101c757600080fd5b506101f36101d6366004610912565b805160208183018101805160038252928201919093012091525481565b604051908152602001610182565b34801561020d57600080fd5b506101ab6104d2565b34801561022257600080fd5b5061014c61063c565b34801561023757600080fd5b506000546001600160a01b031661016e565b34801561025557600080fd5b506101ab6102643660046109bc565b610672565b34801561027557600080fd5b5061014c6102843660046108bf565b61070e565b34801561029557600080fd5b506101ab6107a9565b3480156102aa57600080fd5b5060015461016e906001600160a01b031681565b6000546001600160a01b031633146102e85760405162461bcd60e51b81526004016100e290610a34565b6001600160a01b0381166103365760405162461bcd60e51b8152602060048201526015602482015274446f6e2774206275726e207468652062726964676560581b60448201526064016100e2565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002546000906001600160a01b031633146103b55760405162461bcd60e51b815260206004820152601760248201527f4f6e6c79206272696467652063616e206578656375746500000000000000000060448201526064016100e2565b6001546040516000916103d69133916001600160a01b0316906020016109d4565b6040516020818303038152906040529050836003826040516103f891906109fb565b908152602001604051809103902060008282546104159190610a69565b925050819055508360038260405161042d91906109fb565b90815260200160405180910390205410156104835760405162461bcd60e51b8152602060048201526016602482015275546f74616c2062726964676574206f766572666c6f7760501b60448201526064016100e2565b82856001600160a01b03167f6a8f2c4e73de5c9b42de06282d794653733ff7ac43f109c3dd3c9bd84152f95d866040516104bf91815260200190565b60405180910390a3506001949350505050565b60015460405160009182916104f79133916001600160a01b03909116906020016109d4565b6040516020818303038152906040529050600060038260405161051a91906109fb565b90815260200160405180910390205490506000811161057b5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e74206272696467656420746f6b656e73000000000060448201526064016100e2565b60038260405161058b91906109fb565b908152604051908190036020018120600090556001546340c10f1960e01b8252336004830152602482018390526001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156105e557600080fd5b505af11580156105f9573d6000803e3d6000fd5b50506040518381523392507f4d7f917f6b905f28ba5297e6c224a6cfec20ac6a3698a55b412d30b95ad25d2f91506020015b60405180910390a260019250505090565b6000546001600160a01b031633146106665760405162461bcd60e51b81526004016100e290610a34565b6106706000610853565b565b600154604051630852cd8d60e31b8152600481018390526000916001600160a01b0316906342966c6890602401600060405180830381600087803b1580156106b957600080fd5b505af11580156106cd573d6000803e3d6000fd5b50506040518481523392507fe3a6e26dceff30d982e183d0ce051fb5b791f2108785a9d440d417247cef5b41915060200160405180910390a2506001919050565b6000546001600160a01b031633146107385760405162461bcd60e51b81526004016100e290610a34565b6001600160a01b03811661079d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100e2565b6107a681610853565b50565b60015460405160009182916107ce9133916001600160a01b03909116906020016109d4565b604051602081830303815290604052905060006003826040516107f191906109fb565b908152602001604051809103902054905060038260405161081291906109fb565b908152604051602091819003820181206000905582815233917fffd5f5f77727ae455ee2a18b7d41acbc31e2743ce9087e9b99f5e3630cb21de0910161062b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146108ba57600080fd5b919050565b6000602082840312156108d0578081fd5b6108d9826108a3565b9392505050565b6000806000606084860312156108f4578182fd5b6108fd846108a3565b95602085013595506040909401359392505050565b600060208284031215610923578081fd5b813567ffffffffffffffff8082111561093a578283fd5b818401915084601f83011261094d578283fd5b81358181111561095f5761095f610a8d565b604051601f8201601f19908116603f0116810190838211818310171561098757610987610a8d565b8160405282815287602084870101111561099f578586fd5b826020860160208301379182016020019490945295945050505050565b6000602082840312156109cd578081fd5b5035919050565b6bffffffffffffffffffffffff19606093841b811682529190921b16601482015260280190565b60008251815b81811015610a1b5760208186018101518583015201610a01565b81811115610a295782828501525b509190910192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610a8857634e487b7160e01b81526011600452602481fd5b500190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e989c0fc69e0535eafbb494173acb8607a44a452516eb95d31dd221aacbd0e1764736f6c63430008040033";

type XFW7BridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XFW7BridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XFW7Bridge__factory extends ContractFactory {
  constructor(...args: XFW7BridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "XFW7Bridge";
  }

  deploy(
    _token: string,
    _gateway: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XFW7Bridge> {
    return super.deploy(
      _token,
      _gateway,
      overrides || {}
    ) as Promise<XFW7Bridge>;
  }
  getDeployTransaction(
    _token: string,
    _gateway: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _gateway, overrides || {});
  }
  attach(address: string): XFW7Bridge {
    return super.attach(address) as XFW7Bridge;
  }
  connect(signer: Signer): XFW7Bridge__factory {
    return super.connect(signer) as XFW7Bridge__factory;
  }
  static readonly contractName: "XFW7Bridge";
  public readonly contractName: "XFW7Bridge";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XFW7BridgeInterface {
    return new utils.Interface(_abi) as XFW7BridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XFW7Bridge {
    return new Contract(address, _abi, signerOrProvider) as XFW7Bridge;
  }
}
